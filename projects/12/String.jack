// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
  field Array str;
  field int length;

  /**
   * Construct a new empty string.
   *
   * The initial length of the string will be 0
   *
   * \param maxLength Maximum length of the string
   * \return The current object
   */
  constructor String new(int maxLength) {
  }

  /** Dispose this string. */
  method void dispose() {
  }

  /**
   * Return the current length of this string.
   *
   * \return The current length of the string.
   */
  method int length() {
  }

  /**
   * Return the character at the j-th location of this string.
   *
   * \param j The location to get the character at
   * \return The character value of the j-th character
   */
  method char charAt(int j) {
  }

  /**
   * Set the character at the j-th location of this string to c.
   *
   * \param j The j-th location of this string
   * \param c The character value to set in the string
   */
  method void setCharAt(int j, char c) {
  }

  /**
   * Append c to this string's end and returns this string.
   *
   * \param c The string to append to the end
   * \return The string with c appended
   */
  method String appendChar(char c) {
  }

  /** Erase the last character from this string. */
  method void eraseLastChar() {
  }

  /**
   * Return the integer value of this string.
   *
   * It will process until a non-digit character is detected.
   *
   * \return The integer value
   */
  method int intValue() {
  }

  /**
   * Set this string to hold a representation of the given value.
   *
   * \param val The value to represent
   */
  method void setInt(int val) {
  }

  /**
   * Return the new line character.
   *
   * \return The new line character
   */
  function char newLine() {
  }

  /**
   * Return the backspace character.
   *
   * \return The backspace character
   */
  function char backSpace() {
  }

  /**
   * Return the double quote (") character.
   *
   * \return The double quote character
   */
  function char doubleQuote() {
  }
}
