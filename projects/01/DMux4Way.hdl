// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // NOTE: 0 index refers to the RIGHTMOST bit
    // NOTE: The logic here is best visualized when drawing
    // If the in is zero, everything is zero
    // Therefore: Let us only consider when the in is 1
    // If sel[1] = 0 (the rigthmost bit):
    //     - The a pin will output 1
    //         - If sel[0] = 0 (i.e sel=00):
    //             - The a pin will output 1
    //             - The b pin will output 0
    //         - If sel[0] = 1 (i.e sel=01):
    //             - The a pin will output 0
    //             - The b pin will output 1
    //     - The b pin and what ever is connected to it will output 0
    // Hence to get the truth table above we can:
    // 1. Connect sel[1] to the first DMux
    // 2. Connect both output pins to new DMuxes
    // 3. Connect these DMuxes to sel[0]
    DMux(in=in, sel=sel[1], a=aOrB, b=cOrD);
    DMux(in=aOrB, sel=sel[0], a=a, b=b);
    DMux(in=cOrD, sel=sel[0], a=c, b=d);
}