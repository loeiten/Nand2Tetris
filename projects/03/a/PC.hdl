// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Working backwards from the if else statements

    // prevOut is to be stored if no control pins are set
    // For this to happen inc must be zero
    // Increment the counter
    Inc16(in=prevOut, out=incOut);
    Mux16(a=prevOut, b=incOut, sel=inc, out=incOrPrev);

    // The increment is only stored if we are not loading
    Mux16(a=incOrPrev, b=in, sel=load, out=loadOrIncOrPrev);

    // Loading in only stored if we are not resetting
    // Reset
    Mux16(a=loadOrIncOrPrev, b=false, sel=reset, out=resetOut);
    Mux16(a=loadOrIncOrPrev, b=resetOut, sel=reset, out=resetOrLoadOrIncOrPrev);

    // NOTE: The register takes care of the timing
    Register(in=resetOrLoadOrIncOrPrev, load=true, out=prevOut, out=out);
}
