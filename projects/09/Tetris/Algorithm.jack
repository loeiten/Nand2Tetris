/**
 * Implements the general purpose algorithms
 */

class Algorithm {

  /**
   * Return the modulus.
   *
   * \param dividend The dividend
   * \param divisor The divisor
   * \return The modoulus
   */
  function int mod(int dividend, int divisor){
    var int modolus;

    // Note dividend/divisor is the trucated division
    let modolus = dividend - (divisor * (dividend/divisor));

    return modolus;
  }

  /**
   * Check if an integer is present in an array.
   *
   * \param number The number to check
   * \param theArray The array to investigate
   * \param arraySize The size of the array
   * \return True if the integer is present
   */
  function bool intInArray(int number, Array theArray, int arraySize){
    var bool inArray;
    var int counter;
    var int curNumber;

    let inArray = false;
    while((counter < arraySize) & (~inArray)){
      let curNumber = theArray[counter];
      if(curNumber = number){
        let inArray = true;
      }
      let counter = counter + 1;
    }

    return inArray;
  }
}
