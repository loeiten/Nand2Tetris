/**
 * Implements the Tetris game.
 */

class TetrisGame {
  field int frameStartX;
  field int frameStartY;

  /** Constructs a new Tetris Game. */
  constructor TetrisGame new() {
    var int xLen;
    var int yLen;

    let frameStartX = 1;
    let frameStartY = 6;
    let xLen = 122;
    let yLen = 242;  // 240 + 1 for next line + 1 for frame line

    do Screen.setColor(true);
    do Screen.drawLine(frameStartX, frameStartY, frameStartX + xLen, frameStartY);
    do Screen.drawLine(frameStartX, frameStartY, frameStartX, frameStartY + yLen);
    do Screen.drawLine(frameStartX + xLen, frameStartY, frameStartX + xLen, frameStartY + yLen);
    do Screen.drawLine(frameStartX, frameStartY + yLen, frameStartX + xLen, frameStartY + yLen);

    return this;
  }

  /** Disposes this game. */
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

  /** Runs the game: handles the user's inputs and moves the tetris accordingly */
  method void run() {
    var int size;
    var int x;
    var int y;
    var int startX;
    var int startY;

    var int counter;

    var Mesh frameMesh;

    let counter = 0;
    let size = 10;
    let startX = frameStartX + 2;  // +1 for fram line and +1 for whitespace padding
    let startY = frameStartY + 2;  // +1 for fram line and +1 for whitespace padding

    do Screen.setColor(true);

    // FIXME: Old manual method
    // // Draw 20 vertical blocks
    // while(counter < 20){
    //   let y = startY + (size*counter) + (2*counter);

    //   do Screen.drawRectangle(startX, y, startX + size, y + size);

    //   let counter = counter + 1;
    // }

    // // Draw 10 horizontal blocks
    // let counter = 0;
    // while(counter < 10){
    //   let x = startX + (size*counter) + (2*counter);

    //   do Screen.drawRectangle(x, startY, x + size, startY + size);

    //   let counter = counter + 1;
    // }

    // Test mesh
    // frame start +1 for padding, +1 for next line
    let frameMesh = Mesh.new(10, 20, frameStartX + 2, frameStartY + 2, size);
    // do frameMesh.setState(0, 0, true);
    // do frameMesh.setState(1, 1, true);
    // do frameMesh.setState(2, 0, true);
    // do frameMesh.setState(3, 1, true);
    while (counter < 20){
      do frameMesh.setState(0, counter, true);
      do frameMesh.setState(1, counter, true);
      let counter = counter + 1;
    }
    let counter = 0;
    while (counter < 10){
      do frameMesh.setState(counter, 0, true);
      do frameMesh.setState(counter, 1, true);
      let counter = counter + 1;
    }
    do frameMesh.draw();
    do frameMesh.dispose();


    do Output.moveCursor(3, 30);
    do Output.printString("Done!");


    while (true){
      do Screen.setColor(true);
      // do Screen.drawRectangle(x, y, x + size, y + size);
    }

    // while (~exit) {
    //    // waits for a key to be pressed
    //    while (key = 0) {
    //       let key = Keyboard.keyPressed();
    //       do moveTetris();
    //    }
    //    if (key = 81)  { let exit = true; }     // q key
    //    if (key = 90)  { do tetris.decSize(); } // z key
    //    if (key = 88)  { do tetris.incSize(); } // x key
    //    if (key = 131) { let direction = 1; }   // up arrow
    //    if (key = 133) { let direction = 2; }   // down arrow
    //    if (key = 130) { let direction = 3; }   // left arrow
    //    if (key = 132) { let direction = 4; }   // right arrow

    //    // waits for the key to be released
    //    while (~(key = 0)) {
    //       let key = Keyboard.keyPressed();
    //       do moveTetris();
    //    }
    // } // while
    return;
  }
}
