/**
 * Implements the Mesh class
 */

 class Mesh {
  field int cols;
  field int rows;
  field Array meshArray;
  field int meshLenght;

  constructor Mesh new(int cols_, int rows_) {
    let cols = cols_;
    let rows = rows_;
    let meshLenght = cols * rows;
    let meshArray = Array.new(meshLenght);

    return this;
  }

  method void dispose (){
    do meshArray.dispose();
    do Memory.deAlloc(this);
    return;
  }

  method bool getState(int xInd, int yInd){
    var int index;
    var bool state;

    let index = getMeshArrayIndex(xInd, yInd);
    let state = meshArray[index];

    return state;
  }

  method void setState(int xInd, int yInd, bool state){
    var int index;

    let index = getMeshArrayIndex(xInd, yInd);
    let meshArray[index] = state;
    return;
  }

  method int getMeshArrayIndex(int xInd, int yInd){
    return xInd + (yInd*cols);
  }

  method Array getMeshIndices(int index){
    var Array indices;
    let indices = Array.new(2);

    // x-index (integer division)
    let indices[0] = Algorithm.mod(index, cols);

    // y-index (modolus operator)
    let indices[1] = index/cols;

    return indices;
  }

  method int getMeshLenght(){
    return meshLenght;
  }

  method int getCols(){
    return cols;
  }

  method int getRows(){
    return rows;
  }

 }
